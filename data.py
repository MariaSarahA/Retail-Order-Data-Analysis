import streamlit as st
import mysql.connector
import pandas as pd
# import re


mydb = mysql.connector.connect(
            host="localhost",
            user="root",
            password="Maria",
            database="retailorders",
            autocommit=True
        )
mycursor = mydb.cursor(dictionary=True)
# st.success("Connected to the database successfully!")
       
st.title('Retail Order Data Analysis')
st.subheader('Description')
st.write('This project involves the Data Analysis of a retail order business structure which gives us several insights on different prospects of the business.')
st.header('Assigned Queries')


with st.expander("Query 1"):
    st.write('Find top 10 highest revenue generating products')
    mycursor.execute('''SELECT 
    p.product_name, 
    SUM((o.quantity * o.list_price) - (o.quantity * o.cost_price)) AS revenue
FROM 
    products p
JOIN 
    orders o ON p.product_id = o.product_id
GROUP BY 
    p.product_name
ORDER BY 
    revenue DESC
LIMIT 10;
   ''' )
    st.table(mycursor)


with st.expander("Query 2"):
    st.write('Find the top 5 cities with the highest profit margins')
    mycursor.execute(''' SELECT 
    o.city, 
    SUM((o.quantity * o.list_price) - (o.quantity * o.cost_price)) / SUM(o.quantity * o.list_price) * 100 AS profit_margin
FROM 
    orders o
GROUP BY 
    o.city
ORDER BY 
    profit_margin DESC
LIMIT 5;
''')
    st.table(mycursor)


with st.expander("Query 3"):
    st.write('Calculate the total discount given for each category')
    mycursor.execute(''' SELECT 
    p.category, 
    SUM(o.discount_percent / 100 * o.quantity * o.list_price) AS total_discount
FROM 
    products p
JOIN 
    orders o ON p.product_id = o.product_id
GROUP BY 
    p.category;
    ''')
    st.table(mycursor)


with st.expander("Query 4"):
    st.write('Find the average sale price per product category')
    mycursor.execute('''SELECT 
    p.category, 
    AVG(o.list_price) AS average_sale_price
FROM 
    products p
JOIN 
    orders o ON p.product_id = o.product_id
GROUP BY 
    p.category;
    ''')
    st.table(mycursor)


with st.expander("Query 5"):
    st.write('Find the region with the highest average sale price')
    mycursor.execute('''SELECT 
    o.region, 
    AVG(o.list_price) AS average_sale_price
FROM 
    orders o
GROUP BY 
    o.region
ORDER BY 
    average_sale_price DESC
LIMIT 1;
   ''' )
    st.table(mycursor)


with st.expander("Query 6"):
    st.write('Find the total profit per category')
    mycursor.execute('''SELECT 
    p.category, 
    SUM((o.quantity * o.list_price) - (o.quantity * o.cost_price)) AS total_profit
FROM 
    products p
JOIN 
    orders o ON p.product_id = o.product_id
GROUP BY 
    p.category;
    ''')
    st.table(mycursor)


with st.expander("Query 7"):
    st.write('Identify the top 3 segments with the highest quantity of orders')
    mycursor.execute('''SELECT 
    o.segment, 
    SUM(o.quantity) AS total_quantity
FROM 
    orders o
GROUP BY 
    o.segment
ORDER BY 
    total_quantity DESC
LIMIT 3;
   ''' )
    st.table(mycursor)


with st.expander("Query 8"):
    st.write('Determine the average discount percentage given per region')
    mycursor.execute('''SELECT 
    o.region, 
    AVG(o.discount_percent) AS average_discount
FROM 
    orders o
GROUP BY 
    o.region;
    ''') 
    st.table(mycursor)


with st.expander("Query 9"):
    st.write('Find the product category with the highest total profit')
    mycursor.execute('''SELECT 
    p.category, 
    SUM((o.quantity * o.list_price) - (o.quantity * o.cost_price)) AS total_profit
FROM 
    products p
JOIN 
    orders o ON p.product_id = o.product_id
GROUP BY 
    p.category
ORDER BY 
    total_profit DESC
LIMIT 1
   ''' )
    st.table(mycursor)


with st.expander("Query 10"):
    st.write('Calculate the total revenue generated per year')
    mycursor.execute('''SELECT 
    YEAR(o.order_date) AS year, 
    SUM(o.quantity * o.list_price) AS total_revenue
FROM 
    orders o
GROUP BY 
    YEAR(o.order_date);
''')
    st.table(mycursor)

st.header('Own Queries')

with st.expander("Query 11"):
    st.write('Find the Total Revenue Generated by Each Product')
    mycursor.execute('''SELECT 
    p.product_name, 
    SUM(o.quantity * o.list_price) AS total_revenue
FROM 
    products p
JOIN 
    orders o ON p.product_id = o.product_id
GROUP BY 
    p.product_name;
    ''')
    st.table(mycursor)


with st.expander("Query 12"):
    st.write('Find the Total Quantity Sold for Each City')
    mycursor.execute('''SELECT 
    o.city, 
    SUM(o.quantity) AS total_quantity_sold
FROM 
    orders o
GROUP BY 
    o.city
LIMIT 10;
    ''')
    st.table(mycursor)


with st.expander("Query 13"):
    st.write('Find the Total Discount Given for Each Product')
    mycursor.execute('''SELECT 
    p.product_name, 
    SUM(o.discount_percent / 100 * o.quantity * o.list_price) AS total_discount
FROM 
    products p
JOIN 
    orders o ON p.product_id = o.product_id
GROUP BY 
    p.product_name;
    ''')
    st.table(mycursor)


with st.expander("Query 14"):
    st.write('Find the Average Cost Price of Each Product Category')
    mycursor.execute('''SELECT 
    p.category, 
    AVG(p.cost_price) AS average_cost_price
FROM 
    products p
GROUP BY 
    p.category;
    ''')
    st.table(mycursor)


with st.expander("Query 15"):
    st.write('Find the Total Sales Quantity for Each Region')
    mycursor.execute('''SELECT 
    o.region, 
    SUM(o.quantity) AS total_sales_quantity
FROM 
    orders o
GROUP BY 
    o.region;
    ''')
    st.table(mycursor)


with st.expander("Query 16"):
    st.write('Find the Total Profit Earned by Each Product')
    mycursor.execute('''SELECT 
    p.product_name, 
    SUM((o.quantity * o.list_price) - (o.quantity * o.cost_price)) AS total_profit
FROM 
    products p
JOIN 
    orders o ON p.product_id = o.product_id
GROUP BY 
    p.product_name;
'''  )
    st.table(mycursor)

with st.expander("Query 17"):
    st.write('Find the Total Orders Made by Each Segment')
    mycursor.execute('''SELECT 
    o.segment, 
    COUNT(o.order_id) AS total_orders
FROM 
    orders o
GROUP BY 
    o.segment;
  '''  )
    st.table(mycursor)

with st.expander("Query 18"):
    st.write('Find the Average Discount Percentage for Each City')
    mycursor.execute('''SELECT 
    o.city, 
    AVG(o.discount_percent) AS average_discount
FROM 
    orders o
GROUP BY 
    o.city
LIMIT 10;
   ''' )
    st.table(mycursor)

with st.expander("Query 19"):
    st.write('Find the Total Profit Generated by Each Product Category')
    mycursor.execute('''SELECT 
    p.category, 
    SUM((o.quantity * o.list_price) - (o.quantity * o.cost_price)) AS total_profit
FROM 
    products p
JOIN 
    orders o ON p.product_id = o.product_id
GROUP BY 
    p.category;
  '''  )
    st.table(mycursor)

with st.expander("Query 20"):
    st.write('Calculate the Total Revenue Generated Each Month')
    mycursor.execute('''SELECT 
    DATE_FORMAT(o.order_date, '%Y-%m') AS month, 
    SUM(o.quantity * o.list_price) AS total_revenue
FROM 
    orders o
GROUP BY 
    DATE_FORMAT(o.order_date, '%Y-%m');
   ''' )
    st.table(mycursor)
